cmake_minimum_required(VERSION 3.22)
set(CMAKE_C_FLAGS "-Wall -Werror -std=c11")
set(CMAKE_CXX_FLAGS "-Wall -Werror")
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
project(leocoin)
add_definitions(-D_POSIX_C_SOURCE=199309L)
add_definitions(-D_DEFAULT_SOURCE)
include_directories(${CMAKE_CURRENT_SOURCE_DIR})
find_package(OpenSSL REQUIRED)
include_directories(${OPENSSL_INCLUDE_DIR})
find_package(cmocka REQUIRED)
include_directories(${CMOCKA_INCLUDE_DIR})
# Miner
add_executable(miner src/miner.c)
add_library(linked_list src/linked_list.c)
target_link_libraries(miner linked_list)
add_library(block src/block.c)
target_link_libraries(block linked_list)
target_link_libraries(block OpenSSL::Crypto)
target_link_libraries(miner block)
add_library(blockchain src/blockchain.c)
target_link_libraries(miner blockchain)
add_library(transaction src/transaction.c)
target_link_libraries(miner transaction)
add_library(hash src/hash.c)
target_link_libraries(blockchain hash)
target_link_libraries(miner hash)
add_library(base64 src/base64.c)
target_link_libraries(base64 OpenSSL::Crypto)
target_link_libraries(miner base64)
add_library(endian src/endian.c)
target_link_libraries(miner endian)
add_library(mining_thread src/mining_thread.c)
target_link_libraries(mining_thread hash)
target_link_libraries(mining_thread pthread)
target_link_libraries(miner mining_thread)
add_library(sleep src/sleep.c)
# Peer discovery bootstrap server
add_executable(peer_discovery_bootstrap_server src/peer_discovery_bootstrap_server.c)
target_link_libraries(peer_discovery_bootstrap_server linked_list)
add_library(peer_discovery src/peer_discovery.c)
target_link_libraries(peer_discovery endian)
target_link_libraries(peer_discovery_bootstrap_server peer_discovery)
add_library(networking src/networking.c)
target_link_libraries(peer_discovery_bootstrap_server networking)
if(WIN32)
    target_link_libraries(peer_discovery ws2_32)
    target_link_libraries(peer_discovery_bootstrap_server ws2_32)
endif()
# Peer discovery client
add_executable(peer_discovery_client src/peer_discovery_client.c)
target_link_libraries(peer_discovery_client linked_list)
target_link_libraries(peer_discovery_client peer_discovery)
add_library(peer_discovery_thread src/peer_discovery_thread.c)
target_link_libraries(peer_discovery_thread sleep)
target_link_libraries(peer_discovery_thread networking)
target_link_libraries(peer_discovery_client peer_discovery_thread)
# Tests
add_executable(tests tests/main.c)
add_library(test_file_paths tests/file_paths.c)
target_link_libraries(tests test_file_paths)
add_library(test_linked_list tests/test_linked_list.c)
target_link_libraries(test_linked_list linked_list)
target_link_libraries(tests test_linked_list)
add_library(test_block tests/test_block.c)
target_link_libraries(test_block block)
target_link_libraries(test_block transaction)
target_link_libraries(tests test_block)
add_library(test_blockchain tests/test_blockchain.c)
target_link_libraries(test_blockchain blockchain)
target_link_libraries(tests test_blockchain)
add_library(test_transaction tests/test_transaction.c)
target_link_libraries(test_transaction transaction)
target_link_libraries(tests test_transaction)
add_library(test_base64 tests/test_base64.c)
target_link_libraries(test_base64 base64)
target_link_libraries(tests test_base64)
add_library(test_endian tests/test_endian.c)
target_link_libraries(test_endian endian)
target_link_libraries(tests test_endian)
add_library(test_mining_thread tests/test_mining_thread.c)
target_link_libraries(test_mining_thread sleep)
target_link_libraries(test_mining_thread mining_thread)
target_link_libraries(tests test_mining_thread)
add_library(test_peer_discovery tests/test_peer_discovery.c)
target_link_libraries(test_peer_discovery peer_discovery)
target_link_libraries(tests test_peer_discovery)
add_library(test_networking tests/test_networking.c)
target_link_libraries(test_networking networking)
target_link_libraries(tests test_networking)
add_library(test_sleep tests/test_sleep.c)
target_link_libraries(test_sleep sleep)
target_link_libraries(tests test_sleep)
add_library(test_peer_discovery_thread tests/test_peer_discovery_thread.c)
target_link_libraries(test_peer_discovery_thread peer_discovery_thread)
target_link_libraries(tests test_peer_discovery_thread)
target_link_libraries(tests cmocka)
