cmake_minimum_required(VERSION 3.22)
set(CMAKE_C_FLAGS "-Wall -Werror -std=c99")
set(CMAKE_CXX_FLAGS "-Wall -Werror")
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
project(theblockchainkiller)
include_directories(${CMAKE_CURRENT_SOURCE_DIR})
find_package(OpenSSL REQUIRED)
include_directories(${OPENSSL_INCLUDE_DIR})
add_executable(main src/main.c)
add_library(linked_list src/linked_list.c)
target_link_libraries(main linked_list)
add_library(block src/block.c)
target_link_libraries(block linked_list)
target_link_libraries(block OpenSSL::Crypto)
target_link_libraries(main block)
add_library(blockchain src/blockchain.c)
target_link_libraries(main blockchain)
add_library(transaction src/transaction.c)
target_link_libraries(main transaction)
add_library(hash src/hash.c)
target_link_libraries(main hash)
add_library(base64 src/base64.c)
target_link_libraries(main base64)
include_directories(${CMOCKA_INCLUDE_DIR})
find_package(cmocka REQUIRED)
add_executable(tests tests/main.c)
add_library(test_linked_list tests/test_linked_list.c)
target_link_libraries(test_linked_list linked_list)
target_link_libraries(tests test_linked_list)
add_library(test_block tests/test_block.c)
target_link_libraries(test_block block)
target_link_libraries(test_block transaction)
target_link_libraries(tests test_block)
add_library(test_blockchain tests/test_blockchain.c)
target_link_libraries(test_blockchain blockchain)
target_link_libraries(tests test_blockchain)
add_library(test_transaction tests/test_transaction.c)
target_link_libraries(test_transaction transaction)
target_link_libraries(tests test_transaction)
add_library(test_base64 tests/test_base64.c)
target_link_libraries(test_base64 base64)
target_link_libraries(tests test_base64)
target_link_libraries(tests cmocka)
